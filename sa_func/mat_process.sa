; mat_process.sa
; Y = H * X * H'
; @date 2021125
	.global _mat_process


_mat_process: .cproc data, tmp_data, H
            .reg mat_1, mat_2
            .reg rt_v
            .reg idx0,idx1,tmp
            .reg ori_k,k_4,l,m
            mvk     16,ori_k
k_iter1:
            sub		    ori_k,1,ori_k
            mvk         4,m
            ||mvk       0,rt_v
            shr         ori_k,2,k_4
            shl         k_4,2,k_4
            sub         ori_k,k_4,l
            ;ldh        *+tmp_data[ori_k]
m_iter1:
            sub		    m,1,m
            add         k_4,m,idx0
            ||shl       m,2,tmp
            add         tmp,l,idx1       
            ldh         *+H[idx0],mat_1
            ||ldh       *+data[idx1],mat_2
            mpy         mat_1,mat_2,mat_2
            add         rt_v,mat_2,rt_v
            [m] B m_iter1
            sth         rt_v,*+tmp_data[ori_k]
            [ori_k] B k_iter1
            mvk         16,ori_k
k_iter2:
            sub		    ori_k,1,ori_k
            shru        ori_k,2,k_4
            ||mvk       4,m             
            shl         k_4,2,k_4
            sub         ori_k,k_4,l
            ||mvk       0,rt_v
            shl       l,2,tmp
m_iter2:
            sub		    m,1,m
            add         k_4,m,idx0
            add         tmp,m,idx1       
            ldh         *+H[idx1],mat_1
            ||ldh       *+tmp_data[idx0],mat_2
            mpy         mat_1,mat_2,mat_2
            add         rt_v,mat_2,rt_v
            [m] B m_iter2
            sth         rt_v,*+data[ori_k]
            [ori_k] B k_iter2

            .endproc

; the sa code equals to the c code mat_mpy4x4 in func.c