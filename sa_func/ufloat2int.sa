; ufloat2int.sa
; let float into int like the operation -> (int)((float)*(1<<q_var))
; float_x(in) -> float data
; q_var(in) -> 2^q*var -> q_var
; @date 2021107
	.global _ufloat2int

_ufloat2int: .cproc float_x, q_var
			.reg exp_var_x, mantissa_x, sign_x
			.reg rt_var, shl_xy, exp_base
			; 15(truncation of bits)-exp-q+127
			mvk             142, exp_base
			||mvk				1, shl_xy
			shl				shl_xy,15,shl_xy
			||extu            float_x, 1, 24, exp_var_x
			[!exp_var_x] mvk 0,rt_var
			[!exp_var_x] B rt_process
			extu			float_x, 9, 17, mantissa_x
			||sub			exp_base,exp_var_x, exp_var_x

			sub            	exp_var_x, q_var, exp_var_x
			||or 				mantissa_x,shl_xy,mantissa_x
			shru			mantissa_x,exp_var_x,rt_var
rt_process:
			.return rt_var
			.endproc

; ~~round version~~ it will casue worst case 
;_ufloat2int: .cproc float_x, q_var
;			.reg exp_var_x, mantissa_x, sign_x, mantissa_x2
;			.reg rt_var, shl_xy, exp_base, eq_var
;			; 15(truncation of bits)-exp-q+127 = 142 for round -1 more
;			mvk             142, exp_base
;			||mvk				1, shl_xy
;			shl				shl_xy,15,shl_xy
;			||extu            float_x, 1, 24, exp_var_x
;			extu			float_x, 9, 17, mantissa_x
;			||sub				exp_base,exp_var_x, exp_var_x
;
;			sub            	exp_var_x, q_var, exp_var_x
;			||or 				mantissa_x,shl_xy,mantissa_x
;			shru			mantissa_x,exp_var_x,rt_var
;			||sub			exp_var_x, 1, exp_base
;			shru			mantissa_x,exp_base,exp_base
;			shl				rt_var, 1, exp_var_x
;			cmpeq			exp_var_x,exp_base,eq_var
;			[!eq_var]	add rt_var,1,rt_var
;			.return rt_var
;			.endproc